class GTAOSEmployeeModel {
  GTAOSEmployeeModel({
    required this.employeeId,
    required this.vendorId,
    required this.name,
    required this.department,
    required this.designationId,
    required this.employeeno,
    required this.fathername,
    required this.email,
    required this.password,
    required this.salt,
    required this.worktype,
    required this.worktiming,
    required this.vehicletype,
    required this.vehicleno,
    required this.companyname,
    required this.employeeCost,
    required this.gstin,
    required this.gender,
    required this.telephone,
    required this.photo,
    required this.address,
    required this.city,
    required this.postcode,
    required this.countryId,
    required this.zoneId,
    required this.languageId,
    required this.coordinatorId,
    required this.authorizerId,
    required this.status,
    required this.dateAdded,
    required this.dateModified,
  });

  String employeeId;
  String vendorId;
  String name;
  String department;
  String designationId;
  String employeeno;
  String fathername;
  String email;
  String password;
  String salt;
  String worktype;
  String worktiming;
  String vehicletype;
  String vehicleno;
  String companyname;
  String employeeCost;
  String gstin;
  String gender;
  String telephone;
  String photo;
  String address;
  String city;
  String postcode;
  String countryId;
  String zoneId;
  String languageId;
  String coordinatorId;
  String authorizerId;
  String status;
  DateTime dateAdded;
  DateTime dateModified;

  factory GTAOSEmployeeModel.fromJson(Map<String, dynamic> json) =>
      GTAOSEmployeeModel(
        employeeId: json["employee_id"],
        vendorId: json["vendor_id"],
        name: json["name"],
        department: json["department"],
        designationId: json["designation_id"],
        employeeno: json["employeeno"],
        fathername: json["fathername"],
        email: json["email"],
        password: json["password"],
        salt: json["salt"],
        worktype: json["worktype"],
        worktiming: json["worktiming"],
        vehicletype: json["vehicletype"],
        vehicleno: json["vehicleno"],
        companyname: json["companyname"],
        employeeCost: json["employee_cost"],
        gstin: json["gstin"],
        gender: json["gender"],
        telephone: json["telephone"],
        photo: json["photo"],
        address: json["address"],
        city: json["city"],
        postcode: json["postcode"],
        countryId: json["country_id"],
        zoneId: json["zone_id"],
        languageId: json["language_id"],
        coordinatorId: json["coordinator_id"],
        authorizerId: json["authorizer_id"],
        status: json["status"],
        dateAdded: DateTime.parse(json["date_added"]),
        dateModified: DateTime.parse(json["date_modified"]),
      );

  Map<String, dynamic> toJson() => {
        "employee_id": employeeId,
        "vendor_id": vendorId,
        "name": name,
        "department": department,
        "designation_id": designationId,
        "employeeno": employeeno,
        "fathername": fathername,
        "email": email,
        "password": password,
        "salt": salt,
        "worktype": worktype,
        "worktiming": worktiming,
        "vehicletype": vehicletype,
        "vehicleno": vehicleno,
        "companyname": companyname,
        "employee_cost": employeeCost,
        "gstin": gstin,
        "gender": gender,
        "telephone": telephone,
        "photo": photo,
        "address": address,
        "city": city,
        "postcode": postcode,
        "country_id": countryId,
        "zone_id": zoneId,
        "language_id": languageId,
        "coordinator_id": coordinatorId,
        "authorizer_id": authorizerId,
        "status": status,
        "date_added": dateAdded.toIso8601String(),
        "date_modified": dateModified.toIso8601String(),
      };
}
